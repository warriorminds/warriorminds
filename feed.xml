<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="https://warriorminds.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://warriorminds.github.io//" rel="alternate" type="text/html" /><updated>2018-01-02T13:00:49-06:00</updated><id>https://warriorminds.github.io//</id><title type="html">Warrior Minds</title><subtitle>Entrena tu mente en las artes del Software.</subtitle><entry><title type="html">Fundamentos de Android con Kotlin: Resumen</title><link href="https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro/" rel="alternate" type="text/html" title="Fundamentos de Android con Kotlin: Resumen" /><published>2018-01-02T11:15:55-06:00</published><updated>2018-01-02T11:15:55-06:00</updated><id>https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro/">&lt;h2 id=&quot;resumen&quot;&gt;Resumen&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/XVyoYgaNosc&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;contenido-del-mdulo-introduccin&quot;&gt;Contenido del Módulo Introducción&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-introduccion&quot;&gt;Introducción&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android&quot;&gt;¿Qué es Android?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-android-studio&quot;&gt;Introducción a Android Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo&quot;&gt;Creación del primer proyecto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos&quot;&gt;Emuladores y dispositivos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Resumen&lt;/li&gt;
&lt;/ol&gt;</content><category term="android" /><category term="fundamentos de android con kotlin" /><summary type="html">Resumen del primer módulo de Fundamentos de Android con Kotlin.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Fundamentos de Android con Kotlin: Emuladores y Dispositivos</title><link href="https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos/" rel="alternate" type="text/html" title="Fundamentos de Android con Kotlin: Emuladores y Dispositivos" /><published>2018-01-02T11:05:55-06:00</published><updated>2018-01-02T11:05:55-06:00</updated><id>https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos/">&lt;h2 id=&quot;probando-la-app-emuladores-y-dispositivos&quot;&gt;Probando la app: emuladores y dispositivos&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/1jcg-Sjxp0o&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h3 id=&quot;ligas&quot;&gt;Ligas&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.genymotion.com/fun-zone/&quot; target=&quot;_blank&quot;&gt;Descargar Genymotion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;contenido-del-mdulo-introduccin&quot;&gt;Contenido del Módulo Introducción&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-introduccion&quot;&gt;Introducción&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android&quot;&gt;¿Qué es Android?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-android-studio&quot;&gt;Introducción a Android Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo&quot;&gt;Creación del primer proyecto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Emuladores y dispositivos&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro&quot;&gt;Resumen&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="android" /><category term="fundamentos de android con kotlin" /><category term="genymotion" /><summary type="html">Presentación de las diferentes maneras existentes para ejecutar y probar nuestras aplicaciones. Emuladores en Android Studio, Genymotion y dispositivos físicos.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Fundamentos de Android con Kotlin: Hola Mundo</title><link href="https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo/" rel="alternate" type="text/html" title="Fundamentos de Android con Kotlin: Hola Mundo" /><published>2018-01-02T10:55:55-06:00</published><updated>2018-01-02T10:55:55-06:00</updated><id>https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo/">&lt;h2 id=&quot;primer-proyecto-hola-mundo&quot;&gt;Primer Proyecto: Hola Mundo&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/G88upqpyjLw&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;contenido-del-mdulo-introduccin&quot;&gt;Contenido del Módulo Introducción&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-introduccion&quot;&gt;Introducción&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android&quot;&gt;¿Qué es Android?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-android-studio&quot;&gt;Introducción a Android Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Creación del primer proyecto&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos&quot;&gt;Emuladores y dispositivos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro&quot;&gt;Resumen&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="android" /><category term="fundamentos de android con kotlin" /><summary type="html">Creación de la primera aplicación en Android Studio, Hola Mundo. Se presenta también una descripción de la estructura del proyecto.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Fundamentos de Android con Kotlin: Android Studio</title><link href="https://warriorminds.github.io//blogesp/fundamentos-android-android-studio/" rel="alternate" type="text/html" title="Fundamentos de Android con Kotlin: Android Studio" /><published>2018-01-02T10:45:55-06:00</published><updated>2018-01-02T10:45:55-06:00</updated><id>https://warriorminds.github.io//blogesp/fundamentos-android-android-studio</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/fundamentos-android-android-studio/">&lt;h2 id=&quot;android-studio&quot;&gt;Android Studio&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/7z1bbrPR1OU&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h3 id=&quot;ligas&quot;&gt;Ligas&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/studio/index.html&quot; target=&quot;_blank&quot;&gt;Descargar Android Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/studio/install.html?hl=es&quot; target=&quot;_blank&quot;&gt;Instrucciones de instalación&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;contenido-del-mdulo-introduccin&quot;&gt;Contenido del Módulo Introducción&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-introduccion&quot;&gt;Introducción&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android&quot;&gt;¿Qué es Android?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Introducción a Android Studio&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo&quot;&gt;Creación del primer proyecto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos&quot;&gt;Emuladores y dispositivos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro&quot;&gt;Resumen&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="android" /><category term="fundamentos de android con kotlin" /><category term="android studio" /><summary type="html">Android Studio es el IDE para desarrollar las aplicaciones para Android. Se presenta una introducción a Android Studio y al SDK Manager.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Fundamentos de Android con Kotlin: ¿Qué es Android?</title><link href="https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android/" rel="alternate" type="text/html" title="Fundamentos de Android con Kotlin: ¿Qué es Android?" /><published>2018-01-02T10:35:55-06:00</published><updated>2018-01-02T10:35:55-06:00</updated><id>https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android/">&lt;h2 id=&quot;qu-es-android&quot;&gt;¿Qué es Android?&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/qHqY29XUKYc&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;contenido-del-mdulo-introduccin&quot;&gt;Contenido del Módulo Introducción&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-introduccion&quot;&gt;Introducción&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;¿Qué es Android?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-android-studio&quot;&gt;Introducción a Android Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo&quot;&gt;Creación del primer proyecto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos&quot;&gt;Emuladores y dispositivos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro&quot;&gt;Resumen&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="android" /><category term="fundamentos de android con kotlin" /><summary type="html">Se presenta una introducción al sistema operativo Android, para qué sirve, algunas estadísticas de uso y las versiones que existen del mismo.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Fundamentos de Android con Kotlin: Introducción</title><link href="https://warriorminds.github.io//blogesp/fundamentos-android-introduccion/" rel="alternate" type="text/html" title="Fundamentos de Android con Kotlin: Introducción" /><published>2018-01-02T10:25:55-06:00</published><updated>2018-01-02T10:25:55-06:00</updated><id>https://warriorminds.github.io//blogesp/fundamentos-android-introduccion</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/fundamentos-android-introduccion/">&lt;h2 id=&quot;introduccin&quot;&gt;Introducción&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/JB8Qfrt4YBE&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;contenido-del-mdulo-introduccin&quot;&gt;Contenido del Módulo Introducción&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Introducción&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-que-es-android&quot;&gt;¿Qué es Android?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-android-studio&quot;&gt;Introducción a Android Studio&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-hola-mundo&quot;&gt;Creación del primer proyecto&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-emuladores-dispositivos&quot;&gt;Emuladores y dispositivos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://warriorminds.github.io//blogesp/fundamentos-android-resumen-intro&quot;&gt;Resumen&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="android" /><category term="fundamentos de android con kotlin" /><summary type="html">Introducción al módulo de Fundamentos de Android con Kotlin. Se presentarán los temas que se cubrirán en este módulo.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Base de Datos en Tiempo Real con Firebase</title><link href="https://warriorminds.github.io//blogesp/firebase-db-reglas/" rel="alternate" type="text/html" title="Base de Datos en Tiempo Real con Firebase" /><published>2017-01-31T11:25:55-06:00</published><updated>2017-01-31T11:25:55-06:00</updated><id>https://warriorminds.github.io//blogesp/firebase-db-reglas</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/firebase-db-reglas/">&lt;p&gt;Toda la información oficial de Firebase la pueden encontrar &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduccin&quot;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;Firebase nos proporciona una base de datos en tiempo real, permite trabajar de forma sin conexión y se puede utilizar con Android, iOS y web. Es una base de datos NoSQL y por lo mismo, almacena los datos en un archivo con formato JSON.&lt;/p&gt;

&lt;p&gt;Utilizar la base de datos de Firebase nos da la ventaja de que está en la nube, así evitamos todo lo relacionado con el soporte y mantenimiento y además se puede ir expandiendo conforme aumente el uso.&lt;/p&gt;

&lt;p&gt;Para tener acceso a la base de datos, debemos entrar en la &lt;a href=&quot;https://console.firebase.google.com/&quot;&gt;consola de Firebase&lt;/a&gt;, en el menú &lt;em&gt;Base de Datos&lt;/em&gt;. En esa pantalla tenemos acceso a nuestra base de datos, a la configuración de reglas, estadísticas de uso y copias de seguridad.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/db/03.inicio-db.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/db/03.inicio-db.png&quot; alt=&quot;Base de datos en la consola.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;En este Post nos enfocaremos en entender y aprender cómo crear las &lt;em&gt;reglas&lt;/em&gt;, que son la base para la seguridad de nuestra base de datos. En el siguiente Post, crearemos una base de datos e implementaremos el código necesario para utilizar la base desde una aplicación Android.&lt;/p&gt;

&lt;h2 id=&quot;reglas&quot;&gt;Reglas&lt;/h2&gt;

&lt;p&gt;Las &lt;em&gt;reglas&lt;/em&gt; permiten definir quién tiene acceso de &lt;em&gt;lectura&lt;/em&gt;, quien puede tener acceso de &lt;em&gt;escritura&lt;/em&gt;, permite definir el &lt;em&gt;formato de los datos&lt;/em&gt; (si un elemento puede tener hijos y definir el tipo de dato del elemento) y además permiten definir un elemento de los datos como &lt;em&gt;índice&lt;/em&gt; para poder realizar búsquedas. Para configurar Reglas seleccionamos la pestaña &lt;em&gt;Reglas&lt;/em&gt; en la consola de Firebase.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/db/04.reglas.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/db/04.reglas.png&quot; alt=&quot;Reglas en la consola.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;La estructura de las reglas debe de seguir la estructura de la base de datos, para que se puedan cumplir de manera adecuada. De igual manera, las reglas fallarán si no se tiene definida una regla en el padre.&lt;/p&gt;

&lt;h3 id=&quot;reglas-de-escritura-y-lectura&quot;&gt;Reglas de Escritura y Lectura&lt;/h3&gt;

&lt;p&gt;Existen dos tipos de reglas para regular el acceso a lectura y escritura de datos en nuestra base. Estas dos reglas son&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;.read&lt;/em&gt;: define las reglas que permiten la lectura de datos.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;.write&lt;/em&gt;: define las reglas que permiten la escritura de datos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por default, está permitido hacer escritura y lectura de datos a los usuarios que están autenticados. Tenemos disponible la variable &lt;em&gt;auth&lt;/em&gt; que es diferente de &lt;em&gt;null&lt;/em&gt; cuando el usuario está autenticado. Al entrar a la sección de &lt;em&gt;Base de Datos -&amp;gt; Reglas&lt;/em&gt; por primera vez, tenemos las siguientes reglas:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Las reglas tienen un formato tipo &lt;em&gt;JSON&lt;/em&gt; empezando siempre con el nodo &lt;em&gt;rules&lt;/em&gt; y donde cada elemento hijo de &lt;em&gt;rules&lt;/em&gt; es una ruta diferente. Por ejemplo, nuestra base de datos tendrá una URL de la siguiente manera:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;https://firebase-basededatos.firebaseio.com&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Si queremos agregar un elemento &lt;em&gt;/mensajes&lt;/em&gt; a nuestra base de datos y ponerle reglas, lo haríamos de la siguiente manera:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;mensajes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Esta regla define que para la ruta &lt;em&gt;https://firebase-basededatos.firebaseio.com/mensajes&lt;/em&gt; todos los usuarios autenticados pueden leer y escribir datos.&lt;/p&gt;

&lt;p&gt;Las reglas que definimos se aplican a &lt;strong&gt;todos los hijos&lt;/strong&gt;; esto quiere decir que los hijos van a seguir las reglas que tenga el primer ancestro, sobreescribiendo las reglas definidas en los hijos.&lt;/p&gt;

&lt;p&gt;Por ejemplo, en la siguiente regla, está definida una regla en el padre que permite escribir a cualquier usuario, sin necesitar autenticación. También tenemos definida en el hijo &lt;em&gt;/mensajes&lt;/em&gt; otra regla que solamente permite a los usuarios autenticados escribir datos.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth == null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;mensajes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Como en Firebase se aplica la regla del primer ancestro, entonces cualquier usuario podría escribir datos en &lt;em&gt;/mensajes.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Firebase también nos proporciona algunas &lt;em&gt;variables&lt;/em&gt; que podemos utilizar, por ejemplo podemos hacer referencia a otras rutas de nuestra base de datos, tener acceso a identificadores de autenticación de usuarios, entre otras.&lt;/p&gt;

&lt;p&gt;Un escenario común que podríamos encontrar, es solamente permitir que el usuario modifique su propia información. Para esto, podemos crear la variable &lt;em&gt;$uid&lt;/em&gt;. Cada usuario podría tener asignada una URL, utilizando su identificador de usuario (obtenido al iniciar sesión con Firebase). Por ejemplo,&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;https://firebase-basededatos.firebaseio.com/usuarios/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ab&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45-123&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-1234&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-abcde-a&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Donde &lt;em&gt;123ab45-123a-1234-abcde-a1abc123a1a1&lt;/em&gt; es el identificador del usuario. Si solamente queremos que ese usuario pueda leer datos de esa URL, definiríamos la siguiente regla:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;usuarios&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;$uid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
                &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$uid === auth.uid&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Esta regla se leería de la siguiente manera: para la ruta &lt;em&gt;/usuarios/$uid&lt;/em&gt; solamente podrán leer los datos de cada &lt;em&gt;$uid&lt;/em&gt; los usuarios que se hayan autenticado y que tengan la misma &lt;em&gt;uid&lt;/em&gt; después de autenticarse.&lt;/p&gt;

&lt;p&gt;Más adelante veremos más variables que tenemos disponibles para definir las reglas.&lt;/p&gt;

&lt;h2 id=&quot;reglas-de-validacin&quot;&gt;Reglas de Validación&lt;/h2&gt;

&lt;p&gt;Podemos utilizar las reglas para &lt;em&gt;validar&lt;/em&gt; los datos que se van a escribir a nuestra base. Es necesario tener estas reglas ya que la base de datos de Firebase &lt;em&gt;no tiene esquema&lt;/em&gt; (al ser NoSQL). Con estas reglas podemos validar que los datos ingresados sean correctos y no pueda haber problemas posteriormente. Las reglas de validación se ejecutan &lt;em&gt;una vez que se autorizó la escritura de los datos&lt;/em&gt; (se cumplieron las reglas de .write).&lt;/p&gt;

&lt;p&gt;Para crear una regla de validación, debemos utilizar la palabra &lt;em&gt;.validate&lt;/em&gt;. Como introducción, crearemos una regla que indique que unos valores serán números, cadenas, y limitaremos el tamaño de unas cadenas.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;cadenas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.validate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;newData.isString()&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;numeros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.validate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;newData.isNumber()&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;cadenaTamaño&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.validate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;newData.isString() &amp;amp;&amp;amp; newData.val().length &amp;gt; 5&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Utilizando el simulador, podemos hacer pruebas y ver cuándo nuestras reglas se cumplen y cuando no.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/db/00.regla1.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/db/00.regla1.png&quot; alt=&quot;Reglas en el simulador.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/db/01.regla2.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/db/01.regla2.png&quot; alt=&quot;Reglas en el simulador.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/db/02.regla3.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/db/02.regla3.png&quot; alt=&quot;Reglas en el simulador.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Más adelante veremos reglas más avanzadas.&lt;/p&gt;

&lt;h2 id=&quot;reglas-para-indexacin&quot;&gt;Reglas para indexación&lt;/h2&gt;

&lt;p&gt;La base de datos en Firebase nos permite hacer búsquedas de los datos. Es importante crear &lt;em&gt;índices&lt;/em&gt; para que estas búsquedas sean más eficientes, ya que la base puede contener una gran cantidad de datos.&lt;/p&gt;

&lt;p&gt;Se utilizan las reglas para crear índices, con la palabra &lt;em&gt;indexOn&lt;/em&gt;, proporcionando el nombre de los campos que queremos utilizar como índices:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;usuarios&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.indexOn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;apodo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nombre&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Con esta regla indexamos la ruta &lt;em&gt;usuarios&lt;/em&gt; con sus nodos hijos apodo y nombre. Esta manera de indexar es indexar utilizando los nodos hijos.&lt;/p&gt;

&lt;p&gt;Tambiéne podemos indexar utilizando los valores, en lugar de los hijos. Para esto utilizamos el valor &lt;em&gt;.value&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;indexOn&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.value&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;variables-disponibles-para-crear-reglas&quot;&gt;Variables Disponibles para crear Reglas&lt;/h2&gt;

&lt;p&gt;Existen algunas variables predefinidas que podemos utilizar para crear nuestras reglas. Pueden ver la lista completa &lt;a href=&quot;https://firebase.google.com/docs/reference/security/database/#variables&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;auth&quot;&gt;auth&lt;/h3&gt;

&lt;p&gt;Como ya hemos visto, esta variable nos indica si el usuario ha sido autenticado y contiene la siguiente información:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;provider&lt;/em&gt;: Nos indica qué método utilizó el usuario para iniciar sesión.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;uid&lt;/em&gt;: El identificador único del usuario.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;token&lt;/em&gt;: el token de autenticación del usuario.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por ejemplo, si queremos que solamente puedan leer los datos usuarios que iniciaron sesión con Google, podemos definir una regla como la siguiente:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth.provider == 'google'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;auth != null&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;authtoken&quot;&gt;auth.token&lt;/h3&gt;

&lt;p&gt;Esta variable contiene la información del inicio de sesión del usuario. Puede o no tener las siguientes variables:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;email&lt;/em&gt;: el correo electrónico utilizado.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;email_verified&lt;/em&gt;: si el correo electrónico está verificado.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;name&lt;/em&gt;: el nombre del usuario&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;firebase.sing_in_provider&lt;/em&gt;: el proveedor del inicio de sesión.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;variable&quot;&gt;$variable&lt;/h3&gt;

&lt;p&gt;Como vimos anteriormente, se pueden definir variables en nuestra estructura de reglas con el símbolo $. Por ejemplo, habíamos definido la variable $uid para representar la ruta  https://firebase-basededatos.firebaseio.com/usuarios/$uid donde $uid podría tener un valor similar a 123ab45-123a-1234-abcde-a1abc123a1a1.&lt;/p&gt;

&lt;p&gt;Una vez definidas estas variables, podemos utilizarlas dentro de las reglas.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$uid&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$uid === auth.uid&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Esta regla se podría traducir de la siguiente manera:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;123ab45-123a-1234-abcde-a1abc123a1a1&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; 123ab45-123a-1234-abcde-a1abc123a1a1 === auth.uid&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Teniendo un valor diferente dependiendo del usuario que inicie sesión. De igual manera, podemos crear las variables que sean necesarias.&lt;/p&gt;

&lt;h3 id=&quot;now&quot;&gt;now&lt;/h3&gt;

&lt;p&gt;Esta variable contiene la cantidad de milisegundos transcurridos desde la fecha Epoch Unix (medianoche del 1 de enero de 1970 UTC) hasta el memento de la utilización. Podemos utilizar esta variable para crear reglas referentes al tiempo y fecha.&lt;/p&gt;

&lt;h3 id=&quot;root&quot;&gt;root&lt;/h3&gt;

&lt;p&gt;La variable root contiene una &lt;em&gt;copia de los datos de la base como se encuentra antes de realizar la operación&lt;/em&gt;. Se utiliza para leer datos que existen previamente en la base y crear reglas basadas en esos datos.&lt;/p&gt;

&lt;h3 id=&quot;data&quot;&gt;data&lt;/h3&gt;

&lt;p&gt;Esta variable es similar a root, con la diferencia que solamente trae la &lt;em&gt;copia de los datos en la ubicación que se está modificando&lt;/em&gt;. Por ejemplo,&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rules&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;libros&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;$usuario&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;data.child('nombre').val() == 'John'&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En este ejemplo, &lt;em&gt;data&lt;/em&gt; contiene los datos que existen en $usuario. Por eso podemos tener acceso a su hijo (child) nombre y obtener su valor.&lt;/p&gt;

&lt;h3 id=&quot;newdata&quot;&gt;newData&lt;/h3&gt;

&lt;p&gt;De igual manera, newData es similar a las dos variables anteriores. En este caso, newData trae la &lt;em&gt;información de los datos que se van a agregar&lt;/em&gt;. Esta variable solamente está disponible para las reglas .validate y .write.&lt;/p&gt;

&lt;h2 id=&quot;mtodos-importantes&quot;&gt;Métodos importantes&lt;/h2&gt;

&lt;p&gt;Con las variables root, data y newData tenemos algunos métodos que nos permiten obtener información de la base de datos para crear nuestras reglas. Pueden consultar la lista completa &lt;a href=&quot;https://firebase.google.com/docs/reference/security/database/#ruledatasnapshot_methods&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;val&quot;&gt;val()&lt;/h3&gt;

&lt;p&gt;Este método nos permite obtener el valor de un hijo. Los valores que se pueden obtener son String, Number, Boolean y Null.&lt;/p&gt;

&lt;h3 id=&quot;child&quot;&gt;child()&lt;/h3&gt;

&lt;p&gt;Este método nos permite tener acceso a un hijo determinado. Por ejemplo, data.child(‘nombre’) utilizado previamente nos da acceso al hijo “nombre” del elemento “$usuario”.&lt;/p&gt;

&lt;h3 id=&quot;parent&quot;&gt;parent()&lt;/h3&gt;

&lt;p&gt;Con este método podemos movernos a algún nodo hermano.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;data.parent().child('hijo')&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;haschild-haschildren&quot;&gt;hasChild(), hasChildren()&lt;/h3&gt;

&lt;p&gt;Estos dos métodos nos sirven para saber si root, data o newData tienen un hijo en específico o si tienen varios hijos. Nos puede servir para validar que newData tenga una estructura predefinida.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;newData.hasChildren(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'hijo&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'hijo&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;exists&quot;&gt;exists()&lt;/h3&gt;

&lt;p&gt;Nos indica si root, data, newData contienen algún dato o no.&lt;/p&gt;

&lt;h3 id=&quot;isnumber-isstring-isboolean&quot;&gt;isNumber(), isString(), isBoolean()&lt;/h3&gt;
&lt;p&gt;Nos indica si un valor es número, cadena o booleano.&lt;/p&gt;

&lt;h2 id=&quot;conclusin&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Firebase nos proporciona la base de datos en tiempo real. Necesitamos definir reglas que nos indiquen quiénes tienen permisos para obtener los datos y quiénes tienen permisos para escribir en la base. También podemos tener índices para facilitar la búsqueda, que de igual manera se definen mediante las reglas. Por último, contamos con reglas para validar que los datos que se escriban en la base cumplan con ciertos valores.&lt;/p&gt;

&lt;p&gt;En el próximo Post, crearemos una base de datos, implementaremos sus reglas, y utilizaremos una app de Android para escribir y leer en la base.&lt;/p&gt;</content><category term="firebase" /><category term="android" /><category term="base de datos" /><summary type="html">Firebase proporciona una base de datos en tiempo real. Este Post habla de las reglas para configurar el acceso a la base de datos.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Configuración Remota con Firebase</title><link href="https://warriorminds.github.io//blogesp/firebase-config-remota/" rel="alternate" type="text/html" title="Configuración Remota con Firebase" /><published>2017-01-23T11:25:55-06:00</published><updated>2017-01-23T11:25:55-06:00</updated><id>https://warriorminds.github.io//blogesp/firebase-config-remota</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/firebase-config-remota/">&lt;p&gt;Toda la información oficial de Firebase la pueden encontrar &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El código completo para este Post lo pueden encontrar en &lt;a href=&quot;https://github.com/warriorminds/firebase-config-remota&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduccin&quot;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;Hay veces que necesitamos modificar algunos valores de nuestra aplicación sin tener que publicar una nueva versión solamente para eso. O también en algunas ocasiones necesitamos mostrar cierto contenido para algún grupo de usuarios que cumplan con ciertas reglas (por ejemplo, que el dispositivo esté en algún idioma en específico o que se encuentre en algún país, o también que el sistema operativo sea de alguna versión/tipo). Para estos casos Firebase nos proporciona la opción de &lt;em&gt;Configuración Remota&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Configuracion Remota se conforma por un par de elementos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Una lista de &lt;em&gt;parámetros&lt;/em&gt;, de la forma Llave - Valor.&lt;/li&gt;
  &lt;li&gt;Una lista de &lt;em&gt;condiciones&lt;/em&gt;, las cuales se pueden aplicar a los parametros.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En nuestra aplicación podemos hacer uso de estos parámetros. Por defecto, en la aplicación necesitamos definir estos parámetros con un valor inicial. Si obtenemos los valores que definimos en la Configuración Remota de Firebase, la aplicación va a utilizar estos valores en lugar de los predefinidos en la app.&lt;/p&gt;

&lt;h2 id=&quot;definiendo-parmetros&quot;&gt;Definiendo Parámetros&lt;/h2&gt;

&lt;p&gt;Vamos a iniciar definiendo algunos parámetros para nuestra aplicación de prueba. Estos parámetros se podrán configurar para mostrar o no un texto, cambiar el color de un texto y definir un texto que se quiera mostrar. En la &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;consola de Firebase&lt;/a&gt; entramos a nuestra aplicación y seleccionamos la opción de Configuración Remota en el menú. Nos abre una pantalla donde podemos añadir nuestro primer parámetro.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/00.primer-param.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/00.primer-param.png&quot; alt=&quot;Creando el primer parámetro de configuración remota.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Al presionar el botón &lt;em&gt;Añade Tu Primer Parámetro&lt;/em&gt;, nos aparece un diálogo donde podemos agregar nuestro parámetro. Como llave (o clave, como aparece en Firebase) pondremos la cadena titulo_bienvenida, y como valor podemos poner cualquier texto, en este caso, como se muestra en la imagen, el texto será “Este valor se cambió en la consola”.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/01.nuevo-param.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/01.nuevo-param.png&quot; alt=&quot;Agregando el primer parámetro.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Podemos agregar otro parámetro, en este caso lo llamaremos color_subtítulo. A este parámetro lo dejaremos &lt;strong&gt;SIN&lt;/strong&gt; valor. Al hacer esto, la aplicación &lt;em&gt;utilizará el valor para este parámetro definido dentro de la app&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/02.param-sin-valor.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/02.param-sin-valor.png&quot; alt=&quot;Agregando un parámetro sin valor.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;agregando-condiciones&quot;&gt;Agregando Condiciones&lt;/h2&gt;

&lt;p&gt;Al momento de definir un parámtro, también se nos da la opción de definir una &lt;em&gt;condición&lt;/em&gt; para este parámetro. Una condición nos permite agregar ciertas reglas que se deben de cumplir, para que el valor del parámetro se utilice. Para agregar una nueva condición, en el diálogo donde se define el parámetro, necesitamos presionar el texto &lt;em&gt;Añadir valor de condición&lt;/em&gt;. Al hacer esto, aparecerá otro diálogo donde podemos definir la condición o agregar alguna condición existente.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/03.param-condicion-nueva.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/03.param-condicion-nueva.png&quot; alt=&quot;Agregando una condición al parámetro.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Si queremos definir una condición nueva, se abrirá un nuevo diálogo donde podremos definir la condición. Podemos asignarle un nombre, un color para identificarla, y podemos agregar varias reglas que se deben de cumplir para que el valor del parámetro se utilice.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/04.condiciones.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/04.condiciones.png&quot; alt=&quot;Condición nueva.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Vamos a crear una condición. Esta condición se aplicará cuando el Sistema Operativo del dispositivo sea Android, el país sea México y el idioma del dispositivo sea Inglés.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/05.creando-condicion.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/05.creando-condicion.png&quot; alt=&quot;Creando una condición.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Al crear la condición la podemos agregar a nuestro parámetro. Si se cumple esta condición, podemos asignarle un valor. En nuestro caso, a nuestra condición anterior que llamamos Inglés-Android-Mexico, si se cumple, tendremos el valor &lt;em&gt;El dispositivo está en inglés, es Android y está en México&lt;/em&gt;. En caso de que la condición no se cumpla, vamos a mostrar el valor &lt;em&gt;El texto a mostrar por default&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/06.usando-condicion.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/06.usando-condicion.png&quot; alt=&quot;Valores del parámetro con la condición.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Podemos agregar varias condiciones. Habrá veces en que varias condiciones se puedan cumplir. Sin embargo, el valor que se utilizará será el primer valor donde la condición se cumpla, de arriba hacia abajo.&lt;/p&gt;

&lt;p&gt;Al terminar de añaidr parámetros con sus valores y condiciones, estos cambios no serán publicados inmediatamente. Aparecerá la pantalla con la lista de tus parámetros y valores/condiciones y necesitamos presionar el botón de &lt;em&gt;Aplicar Cambios&lt;/em&gt; en la parte superior de la pantalla para que los parámetros estén disponibles para nuestra aplicación.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/07.publicar-cambios.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/07.publicar-cambios.png&quot; alt=&quot;Publicar los cambios de configuración remota.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;En la sección de Configuración Remota en la consola, también podemos tener acceso a la lista de condiciones que tenemos definidas, las cuales podemos editar, así cómo la opción para crear una condición nueva. Para acceder a esta lista, debemos presionar la pestaña de &lt;em&gt;Condiciones&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/08.condiciones-editar.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/08.condiciones-editar.png&quot; alt=&quot;Lista de condiciones.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;agregando-configuracin-remota&quot;&gt;Agregando Configuración Remota&lt;/h2&gt;

&lt;p&gt;Para comenzar a utilizar la Configuración Remota de Firebase, necesitamos seguir los pasos de este &lt;a href=&quot;https://warriorminds.github.io//blogesp/firebase-intro&quot; target=&quot;_blank&quot;&gt;Post&lt;/a&gt;. Posteriormente, necesitamos agregar la dependencia en el &lt;a href=&quot;https://github.com/warriorminds/firebase-config-remota/blob/master/app/build.gradle&quot; target=&quot;_blank&quot;&gt;gradle de la aplicación&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;config:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;utilizando-configuracin-remota&quot;&gt;Utilizando Configuración Remota&lt;/h2&gt;

&lt;p&gt;Firebase nos proporciona un objeto &lt;em&gt;FirebaseRemoteConfig&lt;/em&gt; para poder utilizar la Configuración Remota. Necesitamos crear una variable de este tipo para posteriormente asignarle la instancia correspondiente y poder comenzar a utilizarlo.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FirebaseRemoteConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FirebaseRemoteConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para que la Configuración Remota funcione, necesitamos crear un &lt;em&gt;archivo xml&lt;/em&gt; con los valores predeterminados de nuestros parámetros. Estos valores se utilizarán cuando no haya algún parámetro en la consola de Firebase con el mismo nombre, o cuándo el parámetro no tenga un valor definido en la consola.&lt;/p&gt;

&lt;p&gt;Crearemos el archivo valores_config_remota.xml donde debemos de crear una estructura como se muestra a continuación.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaultsMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaultsMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Llenando el archivo con los parámetros que definimos en la consola previamente, pero con el valor por defecto, nuestro archivo quedaría de la siguiente manera&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaultsMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titulo_bienvenida&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Aplicaci&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ó&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;de&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuraci&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ó&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mostrar_subtitulo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color_subtitulo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texto_mostrar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Este&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;es&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;el&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;texto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mostrar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;por&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defecto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;en&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;la&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aplicaci&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ó&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaultsMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para que nuestra aplicación cargue los valores por defecto que definimos en nuestro archivo xml, necesitamos utilizar el método &lt;em&gt;setDefaults()&lt;/em&gt; indicándole el archivo donde vendrán nuestros valores.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDefaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valores_config_remota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Una vez que se cargaron los valores por defecto, podemos obtenerlos del objeto FirebaseRemoteConfig y comenzar a utilizarlos.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mostrarValores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;titulo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TITULO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBoolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MOSTRAR_SUBTITULO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;subtitulo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVisibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VISIBLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;subtitulo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVisibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;subtitulo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COLOR_SUBTITULO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;colorSubtitulo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;El color del subtitulo es &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COLOR_SUBTITULO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;texto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TEXTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para obtener los valores de Configuración Remota que están en Firebase, vamos a crear un botón para que cuando lo presionemos, obtenga estos valores.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;botonConfigRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;obtenerConfiguracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Firebase permite hacer solamente &lt;strong&gt;5&lt;/strong&gt; peticiones por hora. Si están en modo de desarrollador van a necesitar más de 5 para hacer sus pruebas. Firebase nos permite configurar el objeto FirebaseRemoteConfig en modo &lt;em&gt;Debug&lt;/em&gt; para poder obtener más peticiones.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;FirebaseRemoteConfigSettings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opcionesConfiguracionRemota&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FirebaseRemoteConfigSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDeveloperModeEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BuildConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setConfigSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opcionesConfiguracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Con esto estamos listos para obtener nuestra configuración. Podemos agregarle un tiempo de expiración de los datos (que en el caso de ser desarrolladores y estar en modo Debug, podrá ser de 0 para cada vez que pidamos la configuración, nos traiga los últimos valores, con la finalidad de probar el código).&lt;/p&gt;

&lt;p&gt;Utilizamos el método &lt;em&gt;fetch()&lt;/em&gt; del objeto FirebaseRemoteConfig para obtener los datos. Una vez obtenidos, necesitamos &lt;em&gt;activarlos&lt;/em&gt; para que puedan ser utilizados. Una vez obtenidos y activados los valores, podemos actualizar los TextViews con los nuevos valores:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;obtenerConfiguracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tiempoExpiracionDatos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// en segundos.&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getConfigSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isDeveloperModeEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tiempoExpiracionDatos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tiempoExpiracionDatos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addOnCompleteListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnCompleteListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onComplete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tarea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tarea&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isSuccessful&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;configuracionRemota&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activateFetched&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mostrarValores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Podemos ver los valores defecto, &lt;em&gt;ANTES&lt;/em&gt; de sincronizar con Firebase.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/09.valores-default.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/09.valores-default.png&quot; alt=&quot;Valores por defecto.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Al presionar el botón, obtenemos la configuración remota.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/config-remota/10.valores-config-remota.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/config-remota/10.valores-config-remota.png&quot; alt=&quot;Valores de configuración remota.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;conclusin&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;La Configuración Remota de Firebase nos permite almacenar parámetros con la forma llave-valor, los cuales nos permiten cambiar algunos aspectos de nuestra aplicación sin tener que sacar una nueva versión. Para que esto funcione, necesitamos agregar los parámetros en la consola, agregar condiciones si es necesario para posteriormente obtener los parámetros dentro de la aplicación. En la aplicación, necesitamos un archivo con los valores por defecto de los parámetros. Para sincronizar con Firebase, necesitamos obtener los parámetros y posteriormente activarlos.&lt;/p&gt;

&lt;p&gt;Las condiciones funcionarán de la siguiente manera: se pueden agregar varias condiciones, pero la primera condición que sea verdadera, será la que se utilice.&lt;/p&gt;

&lt;p&gt;En caso de no tener parámetros con esa llave, o el parámetro en Firebase no tiene un valor, se utilizará el valor del archivo xml dentro de la aplicación. De igual manera se utilizarán los valores de ese archivo cuando no se haga la activación de los parámetros, una vez obtenidos.&lt;/p&gt;

&lt;p&gt;Si hay parámetros con valor y se activaron, y cumplen con las condiciones (en caso de que existan), se utilizarán los valores de la consola de Firebase.&lt;/p&gt;</content><category term="firebase" /><category term="android" /><category term="configuracion remota" /><summary type="html">La configurción remota de Firebase permite cambiar algunos aspectos de tu aplicación sin tener que publicar una nueva versión de tu app.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Notificaciones con Firebase</title><link href="https://warriorminds.github.io//blogesp/firebase-notifications/" rel="alternate" type="text/html" title="Notificaciones con Firebase" /><published>2017-01-16T11:25:55-06:00</published><updated>2017-01-16T11:25:55-06:00</updated><id>https://warriorminds.github.io//blogesp/firebase-notifications</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/firebase-notifications/">&lt;p&gt;Toda la información oficial de Firebase la pueden encontrar &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El código completo para este Post lo pueden encontrar en &lt;a href=&quot;https://github.com/warriorminds/firebase-notificaciones&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduccin&quot;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;Una característica muy importante en las apps móviles es mantener a los usuarios involucrados con tu aplicación. También hay ciertas aplicaciones que necesitan avisar a los usuarios que suceció algún evento (un mensaje de texto o un correo electrónico fueron recibidos). Otro escenario es cuando ha habido algún cambio en los datos del usuario en el servidor y la aplicación requiere ser sincronizada nuevamente. Para todos estos escenarios se pueden utilizar &lt;em&gt;notificaciones&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Firebase nos permite enviar notificaciones a &lt;em&gt;dispositivos individuales&lt;/em&gt; o a un &lt;em&gt;grupo de dispositivos&lt;/em&gt; suscritos a algún &lt;em&gt;tema&lt;/em&gt; en particular. En este Post aprenderemos cómo configurar nuestra aplicación en Android para recibir notificaciones y cómo podemos enviarlas desde la consola de Firebase o lo que debemos realizar para enviarla desde un servidor.&lt;/p&gt;

&lt;h2 id=&quot;instalacin&quot;&gt;Instalación&lt;/h2&gt;

&lt;p&gt;Para poder recibir notificaciones utilizando Firebase, necesitamos configurar nuestra app como se muestra en este &lt;a href=&quot;https://warriorminds.github.io//blogesp/firebase-intro&quot; target=&quot;_blank&quot;&gt;Post&lt;/a&gt;. Además, necesitamos agregar la siguiente dependencia en el archivo &lt;a href=&quot;https://github.com/warriorminds/firebase-notificaciones/blob/master/app/build.gradle&quot; target=&quot;_blank&quot;&gt;build.gradle&lt;/a&gt; de la aplicación.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;messaging:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;notificaciones-en-segundo-plano-para-un-usuario-especfico&quot;&gt;Notificaciones en segundo plano para un usuario específico&lt;/h2&gt;

&lt;p&gt;Se pueden mandar notificaciones de dos maneras: segundo plano y primer plano. También se pueden mandar mensajes a usuarios específicos con el token y a grupos de usuarios. Vamos a comenzar enviando una notificación a un dispositivo en específico cuando la aplicación está en &lt;em&gt;segundo plano&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Cada dispositivo tiene un &lt;em&gt;token de registro&lt;/em&gt;. Este token de registro es el que identifica a cada usuario de tu aplicación y además es el que se deberá agregar en la consola de Firebase al momento de enviar la notificación. Este token se debería de guardar en una base de datos en la nube, para que desde tu servicio puedas enviar notificaciones a un usuario en específico.&lt;/p&gt;

&lt;p&gt;Firebase nos proporciona un servicio, el &lt;em&gt;FirebaseInstanceIdService&lt;/em&gt;, del cual debemos heredar para poder obtener el token al iniciar la app. También nos permite obtener el token nuevamente cuando ésta cambia (en caso de que el usuario desinstale e instale la app o de que borre los datos de la misma).&lt;/p&gt;

&lt;p&gt;Vamos a crear el servicio ServicioDeToken que herede de FirebaseInstanceIdService. Dentro del servicio, necesitamos sobreescribir el método &lt;em&gt;onTokenRefresh()&lt;/em&gt;. Este método se ejecuta cuando el token tiene algún cambio en su estado.&lt;/p&gt;

&lt;p&gt;Dentro de este método podemos obtener la instancia de &lt;em&gt;FirebaseInstanceId&lt;/em&gt; y de esta instancia podemos obtener el token mediante el método &lt;em&gt;getToken()&lt;/em&gt;. Con esta instancia también podemos eliminar el token, o también obtener la fecha de su creación. Una vez obtenido el token, podrán enviar esta información a su servicio web.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onTokenRefresh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;FirebaseInstanceId&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instanciaIdFirebase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FirebaseInstanceId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenDeEsteDispositivo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instanciaIdFirebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Token de este dispositivo: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenDeEsteDispositivo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Creada el &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instanciaIdFirebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCreationTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Enviar token a su servicio web.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Necesitamos registrar nuestro servicio en el &lt;a href=&quot;https://github.com/warriorminds/firebase-notificaciones/blob/master/app/src/main/AndroidManifest.xml&quot; target=&quot;_blank&quot;&gt;manifest&lt;/a&gt; de la app. Hay que agregarle un &lt;em&gt;intent-filter&lt;/em&gt; con acción &lt;em&gt;INSTANCE_ID_EVENT&lt;/em&gt; para que se ejecute nuestro servicio.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.ServicioDeToken&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.google.firebase.INSTANCE_ID_EVENT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ejecutamos nuestra aplicación y podemos ver en la consola el token y la fecha de creación.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/00.token.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/00.token.png&quot; alt=&quot;Token del usuario para enviar notificaciones.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Esta configuración es suficiente para enviar notificaciones desde la consola de Firebase a un dispositivo en específico, cuando la aplicación está en segundo plano.&lt;/p&gt;

&lt;p&gt;Es momento de enviar la notificación. En la &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;consola de Firebase&lt;/a&gt; hay que ir a la sección de Notificaciones y seleccionar Enviar Tu Primer Mensaje.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/01.first-message.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/01.first-message.png&quot; alt=&quot;Crear el primer mensaje para enviar.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Al seleccionar el botón de Enviar Tu Primer Mensaje, nos abre la consola para redactar el mensaje. Vamos a llenar los campos con el mensaje a enviar, seleccionaremos la opción para enviar ahora y por último vamos a seleccionar la opción de un único dispositivo. Al hacer esto, nos pide el Token de Registro que obtuvimos previamente. Una vez que agreguemos el token, podemos enviar el mensaje. Asegúrense de que la app está corriendo en segundo plano.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/02.create-message.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/02.create-message.png&quot; alt=&quot;Llenando los datos para enviar el mensaje.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Pueden agregar información extra en la sección &lt;em&gt;Opciones avanzadas&lt;/em&gt;. En la siguiente sección del Post veremos cómo utilizar esta información extra.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/13.consola-extras.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/13.consola-extras.png&quot; alt=&quot;Datos extra en tu mensaje.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;En el dispositivo vemos que recibimos la notificación.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/03.notif-received.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/03.notif-received.png&quot; alt=&quot;Notificación recibida en segundo plano.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Al dar clic sobre la notificación, Firebase está configurado para abrir nuestra aplicación.&lt;/p&gt;

&lt;h2 id=&quot;notificaciones-en-primer-plano-para-un-usuario-especfico&quot;&gt;Notificaciones en Primer Plano para un usuario específico&lt;/h2&gt;

&lt;p&gt;Para poder manejar las notificaciones en primer plano (cuando el usuario está interactuando con la app) necesitamos agregar un servicio que herede de FirebaseMessagingService.&lt;/p&gt;

&lt;p&gt;Debemos registrar el servicio en nuestro &lt;a href=&quot;https://github.com/warriorminds/firebase-notificaciones/blob/master/app/src/main/AndroidManifest.xml&quot; target=&quot;_blank&quot;&gt;Manifest&lt;/a&gt;. Necesitamos agregar el &lt;em&gt;intent-filter&lt;/em&gt; de &lt;em&gt;MESSAGING_EVENT&lt;/em&gt; para que se ejecute cuando recibamos una notificación.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.ServicioDeMensajes&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.google.firebase.MESSAGING_EVENT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;De igual manera podemos agregar un ícono y un color por default para nuestras notificaciones.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.google.firebase.messaging.default_notification_icon&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@android:drawable/ic_dialog_info&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.google.firebase.messaging.default_notification_color&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@color/colorAccent&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En nuestro servicio ServicioDeMensajes debemos sobreescribir el método &lt;em&gt;onMessageReceived()&lt;/em&gt;, que es el método que se ejecuta cuando se recibe una notificación. También en ese método recibimos un objeto RemoteMessage el cual tiene toda la información que se envió con la notificación.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServicioDeMensajes&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FirebaseMessagingService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onMessageReceived&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoteMessage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;enviarNotificacion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En este método, podemos procesar la información que recibimos. Podemos enviar distintos tipos de mensajes, unos que le pidan a la aplicación hacer algo (sincronizar alguna información) y que no necesite de ninguna notificación gráfica o interacción del usuario.&lt;/p&gt;

&lt;p&gt;Un caso de uso muy común es mostrar una notificación en el dispositivo. Aquí es dónde se haría eso y es lo que haremos en este ejemplo.&lt;/p&gt;

&lt;p&gt;Podemos obtener los datos extras que enviamos en nuestra notificación con &lt;em&gt;mensajeRemoto.getData()&lt;/em&gt;. En este ejemplo agregamos cada valor al intent para mostrarlo posteriormente en la actividad principal. Para obtener la información de la notificación tenemos el método &lt;em&gt;mensajeRemoto.getNotification()&lt;/em&gt;. Con este método podemos obtener el título y el cuerpo de la notificación, si fueron enviados.&lt;/p&gt;

&lt;p&gt;El método enviarNotifiacion() quedaría de la siguiente manera.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;enviarNotificacion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoteMessage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addFlags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FLAG_ACTIVITY_CLEAR_TOP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;llave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putExtra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;llave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;llave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;PendingIntent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pendingIntent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PendingIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getActivity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PendingIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FLAG_ONE_SHOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uriDefaultDeSonido&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RingtoneManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDefaultUri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RingtoneManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TYPE_NOTIFICATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NotificationCompat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builderDeNotificacion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NotificationCompat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSmallIcon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drawable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ic_dialog_info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContentTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNotification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* getNotification() nos da la información del título y el cuerpo que se recibió. */&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContentText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mensajeRemoto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNotification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAutoCancel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uriDefaultDeSonido&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContentIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pendingIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;NotificationManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manejadorDeNotificaciones&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NotificationManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSystemService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NOTIFICATION_SERVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;manejadorDeNotificaciones&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* ID de la notificación */&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builderDeNotificacion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Por último, en la actividad principal, obtenemos los extras y creamos una cadena con cada llave y valor y lo mostramos como Toast.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;setContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;activity_main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExtras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datosRecibidos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;llave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExtras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;datosRecibidos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;llave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;datosRecibidos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;datosRecibidos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExtras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;llave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;datosRecibidos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datosRecibidos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;enviar-notificaciones-a-un-tema&quot;&gt;Enviar Notificaciones a un Tema&lt;/h2&gt;

&lt;p&gt;Firebase nos proporciona la opción de suscribir a usuarios a algún &lt;em&gt;tema&lt;/em&gt; en particular, y que estos usuarios reciban notificaciones enviadas específicamente del tema seleccionado.&lt;/p&gt;

&lt;p&gt;Para este ejemplo, vamos a crear tres botones con los cuales podremos suscribirnos a un tema en específico.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/botonNoticias&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/suscribirse_a_noticias&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/botonDeportes&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/suscribirse_a_deportes&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/botonEntretenimiento&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/suscribirse_a_entretenimiento&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En nuestra actividad, agregaremos un listener a cada botón para suscribirnos al tema correspondiente. Para inscribirse a un tema obtenemos la instancia de &lt;em&gt;FirebaseMessaging&lt;/em&gt; y utilizamos el método de &lt;em&gt;subscribeToTopic()&lt;/em&gt;. En el método inicializarVistas() pueden encontrar este código.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inicializarVistas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botonNoticias&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;botonNoticias&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botonDeportes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;botonDeportes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botonEntretenimiento&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;botonEntretenimiento&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;botonNoticias&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;FirebaseMessaging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;subscribeToTopic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;noticias&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;botonDeportes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;FirebaseMessaging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;subscribeToTopic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;deportes&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;botonEntretenimiento&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;FirebaseMessaging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;subscribeToTopic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;entretenimiento&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;De igual manera, agregaremos tres botones más para cancelar la suscripción a cada tema.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/botonCancelarNoticias&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/cancelar_suscripci_n_a_noticias&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/botonCancelarDeportes&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/cancelar_suscripci_n_a_deportes&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/botonCancelarEntretenimiento&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/cancelar_suscripci_n_a_entretenimiento&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El código que debemos de utilizar para cancelar la suscripción es&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;FirebaseMessaging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unsubscribeFromTopic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;noticias&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Una vez que presionemos alguno de los botones para suscribirnos, puede tardar hasta &lt;strong&gt;24 horas&lt;/strong&gt; en aparecer ese tema en la consola de Firebase.&lt;/p&gt;

&lt;p&gt;En la consola, entramos a la opción de Notificaciones y crear un nuevo mensaje. Seleccionamos la opción de Tema y podemos comenzar a mandar notificaciones a los usuarios suscritos a ese tema.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/14.mensaje-tema.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/14.mensaje-tema.png&quot; alt=&quot;Enviar mensaje a un tema.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;En nuestro dispositivo recibimos la notificación.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/11.notificacion-tema.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/11.notificacion-tema.png&quot; alt=&quot;Mensaje recibido al tema noticias.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Si decidimos cancelar la suscripción a un tema y tratamos de enviar la notificación nuevamente, no recibiremos nada.&lt;/p&gt;

&lt;h2 id=&quot;enviar-notificaciones-a-un-dispositivo-desde-un-servidor&quot;&gt;Enviar Notificaciones a un dispositivo desde un Servidor&lt;/h2&gt;

&lt;p&gt;Además de la consola de Notificaciones de Firebase, podemos tener la necesidad de enviar notificaciones desde nuestro servidor. Como la implementación es muy específica dependiendo del lenguaje de programación que utilice el servicio, vamos a utilizar una aplicación llamda Postman para ver cómo se debe de crear la petición para enviar las notificaciones. Esta aplicación la pueden instalar en Google Chrome en este &lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Necesitamos crear una petición POST a la siguiente URL: &lt;em&gt;https://fcm.googleapis.com/fcm/send&lt;/em&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/04.postman-posturl.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/04.postman-posturl.png&quot; alt=&quot;Liga para enviar POST para notificaciones.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Posteriormente necesitamos agregar dos encabezados. El encabezado &lt;em&gt;Content-Type&lt;/em&gt; tendrá como valor &lt;em&gt;application/json&lt;/em&gt;. Para el encabezado &lt;em&gt;Authorization&lt;/em&gt; necesitamos ir a la &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;consola de Firebase&lt;/a&gt; para obtener su valor. En la consola al entrar en su proyecto, seleccionamos el engrane de opciones y vamos a la sección de &lt;em&gt;Configuración del Proyecto&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/05.console-config.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/05.console-config.png&quot; alt=&quot;Configuración del proyecto.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Una vez en Configuración del Proyecto, seleccionamos la pestaña de &lt;em&gt;Mensajería en la Nube&lt;/em&gt;. Ahí podemos encontrar la &lt;em&gt;Clave de Servidor&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/06.clave-servidor.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/06.clave-servidor.png&quot; alt=&quot;Clave de Servidor.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Copiamos ese valor y de regerso en Postman, agregamos el encabezado &lt;em&gt;Authorization&lt;/em&gt; con el valor de &lt;em&gt;key=&amp;lt;la Clave de Servidor&amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/07.postman-encabezados.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/07.postman-encabezados.png&quot; alt=&quot;Encabezados.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Por último, agregaremos el cuerpo del mensaje en la sección de &lt;em&gt;Body&lt;/em&gt;. Necesitamos agregar un JSON con la siguiente información:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;to&lt;/em&gt;: es el &lt;em&gt;Token Id&lt;/em&gt; del dispositivo&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;notification&lt;/em&gt;: es el objeto que deberá tener los atributos title, que será el título de nuestra notificación, y el atributo body, que será el cuerpo de nuestra notificación.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;data&lt;/em&gt;: este objeto opcional tendrá atributos u objetos que podremos obtener dentro de nuestra app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En Postman seleccionaremos la opción de Body y la opción de raw y pegaremos nuestro JSON:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/08.postman-cuerpo.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/08.postman-cuerpo.png&quot; alt=&quot;JSON a enviar.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Una vez presionamos el botón Send nuestra notificación será enviada. Obtendremos la siguiente respuesta de Firebase Cloud Messaging:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/09.postman-respuesta.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/09.postman-respuesta.png&quot; alt=&quot;Respuesta recibida al enviar la notificación.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;En nuestro dispositivo recibiremos la notificación.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/10.postman-notificacion.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/10.postman-notificacion.png&quot; alt=&quot;Notificación recibida.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Con esta información pueden desarrollar código en su lenguaje de programación web o framework preferido que genere esta petición POST.&lt;/p&gt;

&lt;p&gt;Para enviar notificaciones a un tema, solamente debemos de asignar en el valor del atributo &lt;em&gt;to&lt;/em&gt; el tema al que queramos enviarla precedido de la cadena &lt;em&gt;/topics/&lt;/em&gt;.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/notificaciones/12.postman-tema.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/notificaciones/12.postman-tema.png&quot; alt=&quot;Enviar notificaciones a temas desde Postman.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Pueden utilizar esta opción para probar las notificaciones a temas antes de que el tema aparezca en la consola de Firebase.&lt;/p&gt;</content><category term="firebase" /><category term="android" /><category term="notificaciones" /><summary type="html">Aprende a enviar y recibir notificaciones con tu aplicación Android utilizando Firebase.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry><entry><title type="html">Analytics con Firebase</title><link href="https://warriorminds.github.io//blogesp/firebase-analytics/" rel="alternate" type="text/html" title="Analytics con Firebase" /><published>2017-01-10T12:25:55-06:00</published><updated>2017-01-10T12:25:55-06:00</updated><id>https://warriorminds.github.io//blogesp/firebase-analytics</id><content type="html" xml:base="https://warriorminds.github.io//blogesp/firebase-analytics/">&lt;p&gt;Toda la información oficial de Firebase la pueden encontrar &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;aquí&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El código completo para este Post lo pueden encontrar en &lt;a href=&quot;https://github.com/warriorminds/firebase-analytics&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Necesitan seguir los pasos en el Post de &lt;a href=&quot;https://warriorminds.github.io//blogesp/firebase-intro&quot; target=&quot;_blank&quot;&gt;Introducción a Firebase&lt;/a&gt; para poder comenzar a utilizar Analytics.&lt;/p&gt;

&lt;h2 id=&quot;introduccin&quot;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;Analytics nos permite conocer cómo nuestros usuarios interactúan con la app. También nos permite tener reportes de fallas y excepciones así cómo nos provee de filtros para poder visualizar la información generada por nuestros usuarios de diferentes maneras. En este Post aprenderemos cómo utilizar Firebase para agregar Analytics a nuestra aplicación.&lt;/p&gt;

&lt;h2 id=&quot;agregando-analytics&quot;&gt;Agregando Analytics&lt;/h2&gt;

&lt;p&gt;Después de seguir los pasos en el Post de  &lt;a href=&quot;https://warriorminds.github.io//blogesp/firebase-intro&quot; target=&quot;_blank&quot;&gt;Introducción a Firebase&lt;/a&gt;, ya tenemos lo necesario para utilizar Analytics, ya que Analytics viene incluido en la dependencia principal de Firebase, la cual pueden encontrar en el archivo &lt;a href=&quot;https://github.com/warriorminds/firebase-analytics/blob/master/app/build.gradle&quot; target=&quot;_blank&quot;&gt;gradle de la app&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;core:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para que Analytics funcione, necesitamos agregar los siguientes permisos en el Manifest:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permission&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.ACCESS_NETWORK_STATE&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permission&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;permission&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;android.permission.WAKE_LOCK&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Firebase nos permite tener registro de dos tipos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Eventos&lt;/li&gt;
  &lt;li&gt;Propiedades de usuario&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;eventos&quot;&gt;Eventos&lt;/h2&gt;

&lt;p&gt;Un &lt;em&gt;evento&lt;/em&gt; es alguna acción de importancia que ocurre dentro de nuestra aplicación, la cual quisiéramos medir y analizar. Por ejemplo, quisiéramos saber cuando un usuario compra algún objeto desde nuestra app, cuando inicia sesión, cuando instala o desinstala la app, o alguna opción que seleccionó.&lt;/p&gt;

&lt;p&gt;Firebase nos permite enviar hasta &lt;em&gt;500 eventos&lt;/em&gt; diferentes desde nuestra aplicación. También nos provee algunos eventos predefinidos que podemos utilizar, aunque también podemos enviar nuestros propios eventos. A cada evento se le pueden agregar hasta &lt;em&gt;25 parámetros&lt;/em&gt; por evento.&lt;/p&gt;

&lt;h3 id=&quot;eventos-enviados-por-defecto&quot;&gt;Eventos enviados por defecto&lt;/h3&gt;

&lt;p&gt;Al agregar Firebase se tiene el registro de algunos eventos sin necesidad de agregar ningún código.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;first_open&lt;/strong&gt;: este evento nos indica la primera vez que un usuario abre nuestra app después de instalarla o reinstalarla.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;in_app_purchase&lt;/strong&gt;: este evento nos indica cuando un usuario termina una compra dentro de la aplicación utilizando Google Play Store. Se envían los siguientes parámetros: ID del producto, nombre del producto, la moneda de la compra y la cantidad de productos comprados.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;user_engagement&lt;/strong&gt;: este evento nos indica cuando el usuario tiene la app abierta y está interactuando con ella.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;session_start&lt;/strong&gt;: se envía cuando un usuario usa la app por más de un tiempo mínimo (que se puede asignar en la app, y que por default es 10 segundos) después de un tiempo de inactividad (que es 30 minutos por defecto y también se puede asignar).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;app_update&lt;/strong&gt;: se envía cuando la app es actualizada. Se envía el ID de la versión anterior de la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;app_remove&lt;/strong&gt;: se envía cuando se ha desinstalado la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;os_update&lt;/strong&gt;: se envía cuando se ha actualizado el sistema operativo. Se envía el ID de la versión anterior del S.O.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;app_clear_data&lt;/strong&gt;: nos indica cuando el usuario borra toda la información de la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;app_exception&lt;/strong&gt;: nos indica cuando ha habido alguna excepción en nuestra app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;notification_foreground&lt;/strong&gt;: se envía cuando se recibe una notificación por medio de Firebase y la app está siendo utilizada.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;notification_receive&lt;/strong&gt;: nos indica cuando se recibe una notificación por medio de FIrebase y la app está en background.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;notification_open&lt;/strong&gt;: nos indica cuando el usuario abre una notificación enviada por medio de Firebase.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;notification_dismiss&lt;/strong&gt;: nos indica cuando el usuario quita la notificación enviada por Firebase.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;dynamic_link_first_open&lt;/strong&gt;: nos indica cuando un usuario abre la app por primera vez utilizando un link dinámico.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;dynamic_link_app_open&lt;/strong&gt;: se envía cuando el usuario abre la app con un link dinámico.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;dynamic_link_app_update&lt;/strong&gt;: nos indica cuando el usuario actualiza la app utilizando un link dinámico.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;enviar-eventos&quot;&gt;Enviar Eventos&lt;/h3&gt;

&lt;p&gt;Firebase nos proporciona algunas constantes de eventos comunes para la mayoría de las apps, para apps de ventas y comercio, para apps de viaje y para juegos. También nos proporciona algunas constantes para pasar como parámetros de eventos. Pueden ver la lista de eventos y parámetros que nos proporciona Firebase al final del post. De igual manera, podemos crear nuestros propios eventos con nuestros propios parámetros.&lt;/p&gt;

&lt;p&gt;En este post agregaremos dos botones y pondremos un evento a cada uno.&lt;/p&gt;

&lt;p&gt;En nuestro layout agregamos dos botones:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/boton_compra&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/evento_compra&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/boton_personalizado&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/analytics_personalizado&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Con el primer botón utilizaremos las constantes que nos proporciona Firebase. Con el segundo botón utilizaremos nuestros propios valores para el evento y sus parámetros.&lt;/p&gt;

&lt;p&gt;Para enviar &lt;em&gt;nuestros propios eventos&lt;/em&gt;, necesitamos una instancia de FirebaseAnalytics. Agregamos este código en nuestra actividad:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;analyticsFirebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;analyticsFirebase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Inicializamos las vistas y agregamos un OnClickListener() a cada botón.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inicializarVistas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botonCompra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;boton_compra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;botonCompra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;analyticsCompra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botonPersonalizado&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;boton_personalizado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;botonPersonalizado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;analyticsPersonalizado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Los parámetros de nuestro evento se agregan en un &lt;em&gt;Bundle&lt;/em&gt; y utilizamos el método de &lt;em&gt;analyticsFirebase.logEvent(evento, parámetros)&lt;/em&gt; para enviarlo.&lt;/p&gt;

&lt;p&gt;El método analyticsCompra() que utiliza las constantes de Firebase quedaría de la siguiente manera:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;analyticsCompra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CURRENCY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MXN&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TRANSACTION_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;compra2x1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;analyticsFirebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ECOMMERCE_PURCHASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El método analyticsPersonalizado() que utiliza nuestros propios eventos y parámetros, quedaría de la siguiente manera:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;analyticsPersonalizado&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FirebaseAnalytics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ITEM_CATEGORY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;prueba&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;analyticsFirebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;logEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;analytics_prueba&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Al ejecutar nuestra app y presionar los botones, se generan los eventos. Estos eventos los podemos ver en la &lt;a href=&quot;https://console.firebase.google.com/&quot; target=&quot;_blank&quot;&gt;consola de Firebase&lt;/a&gt; en nuestra aplicación. En el menú principal seleccionamos Analytics y entramos a la pestaña de Eventos. Los eventos pueden tardar un tiempo en aparecer en la consola.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/analytics/01.console-events.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/analytics/01.console-events.png&quot; alt=&quot;Eventos en la consola de Firebase&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;En esta imagen también podemos observar los eventos que Firebase registra automáticamente, como lo son app_remove, first_open y session_start.&lt;/p&gt;

&lt;h2 id=&quot;propiedades-de-usuario&quot;&gt;Propiedades de usuario&lt;/h2&gt;

&lt;p&gt;Las propiedades de usuario son atributos que nos permiten filtar la información para identificar los segmentos de personas que utilizan nuestra app.&lt;/p&gt;

&lt;p&gt;Al igual que con los Eventos, Firebase registra automáticamente algunas propiedades de usuario. Es importante mencionar que Firebase obtiene algunas de estas propiedades automáticas del ID de publicidad de Android, por lo que si no se ha configurado este ID, no se tendrán algunas de las propiedades.&lt;/p&gt;

&lt;p&gt;Estas son las propiedades que se registran automáticamente:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Age&lt;/strong&gt;: identifica a los usuarios en 6 grupos: 18-24, 25-34, 35-44, 45-54, 55-64 y 65+.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;App Store&lt;/strong&gt;: es la tienda de la cual se bajó la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;App Version&lt;/strong&gt;: identifica el versionName de la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Country&lt;/strong&gt;: el país donde se encuentra el usuario.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Device Brand&lt;/strong&gt;: la marca del teléfono en donde se instaló la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Device Category&lt;/strong&gt;: la categoría del dispositivo móvil (tablet, celular).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Device Model&lt;/strong&gt;: el nombre del modelo del dispositivo.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;First Open Time&lt;/strong&gt;: la hora en microsegundos a la cual se abrió la app por primera vez.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gender&lt;/strong&gt;: género del usuario de la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interests&lt;/strong&gt;: intereses del usuario de la app.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Language&lt;/strong&gt;: el idioma en el que está el dispositivo.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;New/Established&lt;/strong&gt;: tipo de usuario; new: abrió la app hace menos de 7 días; established: abrió la app por primera vez hace más de 7 días.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;OS Version&lt;/strong&gt;: la versión del sistema operativo.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Podemos observar algunas de estas propiedades en el Panel de Control de Analytics en la consola de Firebase.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/analytics/02.console-user-prop-main.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/analytics/02.console-user-prop-main.png&quot; alt=&quot;Propiedades de Usuario en la consola de Firebase&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;También podemos crear nuestras propias propiedades de usuario. En el Panel de Control de Analytics seleccionamos la pestaña de Propiedades de Usuario, después presionamos el botón Nueva Propiedad de Usuario.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/analytics/03.nueva_user_property.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/analytics/03.nueva_user_property.png&quot; alt=&quot;Creación de propiedades de usuario.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Necesitamos nombrar nuestra propiedad de usuario y ponerle una breve descripción.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/analytics/04.creando_user_prop.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/analytics/04.creando_user_prop.png&quot; alt=&quot;Creación de propiedades de usuario.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;De regreso en nuestro código, vamos a agregar un nuevo botón para reportar el grupo favorito del usuario, utilizando esta nueva propiedad.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/boton_propiedad_usuario&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout_height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;android:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/grupo_fav&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Inicializamos nuestro botón y le agregamos su OnClickListener().&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;botonPropiedadUsuario&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;boton_propiedad_usuario&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;botonPropiedadUsuario&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnClickListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;propiedadUsuario&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para enviar una propiedad de usuario, utilizamos el método &lt;em&gt;analyticsFirebase.setUserProperty(propiedad, valor)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Vamos a tener un arreglo con tres grupos musicales y mandar uno de manera aleatoria al presionar el botón.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grupos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;The Beatles&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Pink Floyd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Led Zeppelin&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El método propiedadUsuario() quedaría de la siguiente manera:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;propiedadUsuario&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grupoFavorito&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grupos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;analyticsFirebase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setUserProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;grupo_favorito&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grupoFavorito&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Después de algunas horas, esta propiedad de usuario se puede utilizar en la consola para filtar la información:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://warriorminds.github.io//images/fb/analytics/05.usando_user_prop.png&quot;&gt;&lt;img src=&quot;https://warriorminds.github.io//images/fb/analytics/05.usando_user_prop.png&quot; alt=&quot;Utilizando propiedades de usuario.&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;constantes-de-eventos-y-parmetros-proporcionados-por-firebase&quot;&gt;Constantes de Eventos y Parámetros Proporcionados por Firebase&lt;/h2&gt;

&lt;p&gt;Esta es la lista de las constantes de Eventys y Parámetros que Firebase nos proporciona.&lt;/p&gt;

&lt;h3 id=&quot;addpaymentinfo&quot;&gt;ADD_PAYMENT_INFO&lt;/h3&gt;

&lt;p&gt;Este evento nos indica que el usuario agregó información de pago a la app. No tiene parámetros.&lt;/p&gt;

&lt;h3 id=&quot;addtocart&quot;&gt;ADD_TO_CART&lt;/h3&gt;

&lt;p&gt;Este evento nos indica que se agregó un elemento al carrito de compras. Le pueden agregar los siguientes parámetros:&lt;/p&gt;

&lt;p&gt;Parámetros necesarios&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ITEM_ID (String): identificador del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_NAME (String): nombre del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_CATEGORY (String): categoría del producto.&lt;/li&gt;
  &lt;li&gt;QUANTITY (long): cantidad de elementos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;parmetros-opcionales&quot;&gt;Parámetros opcionales:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;PRICE (double): precio del elemento.&lt;/li&gt;
  &lt;li&gt;VALUE (double): valor del elemento.&lt;/li&gt;
  &lt;li&gt;CURRENCY (String): moneda en la que está el precio.&lt;/li&gt;
  &lt;li&gt;ORIGIN (String): procedencia del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_LOCATION_ID (String): ID de Google Place del origen del producto.&lt;/li&gt;
  &lt;li&gt;DESTINATION (String): Destino del producto.&lt;/li&gt;
  &lt;li&gt;START_DATE (String): fecha de inicio del producto (puede ser de alguna oferta, o desde cuando está a la venta) en formato YYYY-MM-DD.&lt;/li&gt;
  &lt;li&gt;END_DATE (String): fecha de fin del producto (cuando termina la oferta, cuando se dejará de vender el producto) en formato YYYY-MM-DD.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;addtowishlist&quot;&gt;ADD_TO_WISHLIST&lt;/h3&gt;

&lt;p&gt;Evento que se genera cuando se agregar un producto a una lista de deseos.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ITEM_ID (String): identificador del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_NAME (String): nombre del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_CATEGORY (String): categoría del producto.&lt;/li&gt;
  &lt;li&gt;QUANTITY (long): cantidad de elementos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;PRICE (double): precio del elemento.&lt;/li&gt;
  &lt;li&gt;VALUE (double): valor del elemento.&lt;/li&gt;
  &lt;li&gt;CURRENCY (String): moneda en la que está el precio.&lt;/li&gt;
  &lt;li&gt;ITEM_LOCATION_ID (String): ID de Google Place del origen del producto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;appopen&quot;&gt;APP_OPEN&lt;/h3&gt;

&lt;p&gt;Evento que se genera al abrir la app.&lt;/p&gt;

&lt;h3 id=&quot;begincheckout&quot;&gt;BEGIN_CHECKOUT&lt;/h3&gt;

&lt;p&gt;Evento al comenzar con el checkout para realizar una compra.&lt;/p&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;VALUE (double): valor del elemento (precio).&lt;/li&gt;
  &lt;li&gt;CURRENCY (String): moneda en la que está el precio.&lt;/li&gt;
  &lt;li&gt;TRANSACTION_ID (String): ID de la transacción a generar.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_NIGHTS (long): número de noches para reservaciones de hotel.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_ROOMS (long): número de cuartos en reservaciones de hotel.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_PASSENGERS (long): número de pasajeros en viajes.&lt;/li&gt;
  &lt;li&gt;ORIGIN (String): origen del viaje o del producto.&lt;/li&gt;
  &lt;li&gt;DESTINATION (String): destino del viaje o del producto.&lt;/li&gt;
  &lt;li&gt;START_DATE (String): fecha de inicio para el viaje, en formato YYYY-MM-DD.&lt;/li&gt;
  &lt;li&gt;END_DATE (String): fecha de fin del viaje, en formato YYYY-MM-DD.&lt;/li&gt;
  &lt;li&gt;TRAVEL_CLASS (String): clase del vuelo (económico, business, etc).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;earnvirtualcurrency&quot;&gt;EARN_VIRTUAL_CURRENCY&lt;/h3&gt;

&lt;p&gt;Evento cuando el usuario obtiene moneda virtual. (como en juegos o promociones en compras).&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;VIRTUAL_CURRENCY_NAME (String): nombre de la moneda virtual en tu app.&lt;/li&gt;
  &lt;li&gt;VALUE (double): cantidad de moneda virtual obtenida.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ecommercepurchase&quot;&gt;ECOMMERCE_PURCHASE&lt;/h3&gt;

&lt;p&gt;Evento cuando un usuario ha hecho una compra desde tu app.&lt;/p&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CURRENCY (String): moneda en la que se realizó la compra.&lt;/li&gt;
  &lt;li&gt;VALUE (double): valor de la compra.&lt;/li&gt;
  &lt;li&gt;TRANSACTION_ID (String): ID de la transacción realizada.&lt;/li&gt;
  &lt;li&gt;TAX (double): impuesto del total de la compra.&lt;/li&gt;
  &lt;li&gt;SHIPPING (double): costo del envío.&lt;/li&gt;
  &lt;li&gt;COUPON (String): código de un cupón de oferta utilizado en la compra.&lt;/li&gt;
  &lt;li&gt;LOCATION (String): ID de Google Place, o tu propio ID del lugar de la compra.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_NIGHTS (long): número de noches reservadas.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_ROOMS (long): número de cuartos reservados.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_PASSENGERS (long): número de pasajeros en el viaje.&lt;/li&gt;
  &lt;li&gt;ORIGIN (String): origen del viaje comprado.&lt;/li&gt;
  &lt;li&gt;DESTINATION (String): destino del viaje comprado.&lt;/li&gt;
  &lt;li&gt;START_DATE (String): fecha del viaje.&lt;/li&gt;
  &lt;li&gt;END_DATE (String); fecha del viaje de regreso.&lt;/li&gt;
  &lt;li&gt;TRAVEL_CLASS (String): clase del vuelo (económico, business, etc).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;joingroup&quot;&gt;JOIN_GROUP&lt;/h3&gt;

&lt;p&gt;Evento cuando el usuario se une a un grupo.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;GROUP_ID (String): ID del grupo al que se unió el usuario.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;levelup&quot;&gt;LEVEL_UP&lt;/h3&gt;

&lt;p&gt;Evento que indica que el usuario subió de nivel.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;LEVEL (long): nivel al que subió el usuario.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CHARACTER (String): personaje del usuario.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;login&quot;&gt;LOGIN&lt;/h3&gt;

&lt;p&gt;Evento que indica que el usuario inició sesión.&lt;/p&gt;

&lt;h3 id=&quot;postscore&quot;&gt;POST_SCORE&lt;/h3&gt;

&lt;p&gt;Evento que indica cuando el usuario obtuvo un puntaje.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SCORE (long): puntaje obtenido.&lt;/li&gt;
  &lt;li&gt;LEVEL (long): nivel en el que se obtuvo el puntaje.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CHARACTER (String): personaje del usuario.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;presentoffer&quot;&gt;PRESENT_OFFER&lt;/h3&gt;

&lt;p&gt;Evento que indica que se le presentó una oferta al usuario.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ITEM_ID (String): identificador de la oferta.&lt;/li&gt;
  &lt;li&gt;ITEM_NAME (String): nombre de la oferta.&lt;/li&gt;
  &lt;li&gt;ITEM_CATEGORY (String): categoría de la oferta.&lt;/li&gt;
  &lt;li&gt;QUANTITY (long): cantidad de elementos en la oferta.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;PRICE (double): precio del elemento.&lt;/li&gt;
  &lt;li&gt;VALUE (double): valor del elemento.&lt;/li&gt;
  &lt;li&gt;CURRENCY (String): moneda en la que está el precio.&lt;/li&gt;
  &lt;li&gt;ORIGIN (String): procedencia del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_LOCATION_ID (String): ID de Google Place del origen del producto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;purchaserefund&quot;&gt;PURCHASE_REFUND&lt;/h3&gt;

&lt;p&gt;Evento que indica que se hizo la devolución de un producto.&lt;/p&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CURRENCY (String): moneda en la que está el precio.&lt;/li&gt;
  &lt;li&gt;VALUE (double): valor del elemento.&lt;/li&gt;
  &lt;li&gt;TRANSACTION_ID (String): ID de la transacción a generar.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;search&quot;&gt;SEARCH&lt;/h3&gt;

&lt;p&gt;Indica que se realizó una búsqueda, así como algunos parámetros de la misma.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SEARCH_TERM (String): término de búsqueda.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;NUMBER_OF_NIGHTS (long): número de noches para reservaciones de hotel.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_ROOMS (long): número de cuartos en reservaciones de hotel.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_PASSENGERS (long): número de pasajeros en viajes.&lt;/li&gt;
  &lt;li&gt;ORIGIN (String): origen del viaje o del producto.&lt;/li&gt;
  &lt;li&gt;DESTINATION (String): destino del viaje o del producto.&lt;/li&gt;
  &lt;li&gt;START_DATE (String): fecha de inicio para el viaje, en formato YYYY-MM-DD.&lt;/li&gt;
  &lt;li&gt;END_DATE (String): fecha de fin del viaje, en formato YYYY-MM-DD.&lt;/li&gt;
  &lt;li&gt;TRAVEL_CLASS (String): clase del vuelo (económico, business, etc).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;selectcontent&quot;&gt;SELECT_CONTENT&lt;/h3&gt;

&lt;p&gt;Evento que indica que el usuario ha seleccionado algún elemento en tu app. Puede ser cualquier objeto de tu app.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CONTENT_TYPE (String): Tipo de elemento seleccionado.&lt;/li&gt;
  &lt;li&gt;ITEM_ID (String): identificador del producto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;share&quot;&gt;SHARE&lt;/h3&gt;

&lt;p&gt;Evento que indica cuando un usuario comparte algo.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CONTENT_TYPE (String): Tipo de elemento seleccionado.&lt;/li&gt;
  &lt;li&gt;ITEM_ID (String): identificador del producto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;signup&quot;&gt;SIGN_UP&lt;/h3&gt;

&lt;p&gt;Evento que indica cuando el usuario se registra en tu app.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SIGN_UP_METHOD (String): método que utilizó el usuario para iniciar sesión.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;spendvirtualcurrency&quot;&gt;SPEND_VIRTUAL_CURRENCY&lt;/h3&gt;

&lt;p&gt;Evento que indica que se gastó moneda virtual en la app.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ITEM_NAME (String): nombre del producto.&lt;/li&gt;
  &lt;li&gt;VIRTUAL_CURRENCY_NAME (String): nombre de la moneda virtual en tu app.&lt;/li&gt;
  &lt;li&gt;VALUE (double): cantidad de moneda virtual gastada.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tutorialbegin&quot;&gt;TUTORIAL_BEGIN&lt;/h3&gt;

&lt;p&gt;Evento que indica que ha iniciado el tutorial en tu app.&lt;/p&gt;

&lt;h3 id=&quot;tutorialcomplete&quot;&gt;TUTORIAL_COMPLETE&lt;/h3&gt;

&lt;p&gt;Evento que indica que el usuario terminó el tutorial.&lt;/p&gt;

&lt;h3 id=&quot;unlockachievement&quot;&gt;UNLOCK_ACHIEVEMENT&lt;/h3&gt;

&lt;p&gt;Evento que indica que el usuario ha desbloqueado un logro en el juego.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ACHIEVEMENT_ID (String): ID del logro desbloquado.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;viewitem&quot;&gt;VIEW_ITEM&lt;/h3&gt;

&lt;p&gt;Evento que indica que se ha mostrado algún elemento al usuario.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ITEM_ID (String): identificador del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_NAME (String): nombre del producto.&lt;/li&gt;
  &lt;li&gt;ITEM_CATEGORY (String): categoría del producto.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Parámetros opcionales:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ITEM_LOCATION_ID (String): ID de Google Place del origen del producto mostrado.&lt;/li&gt;
  &lt;li&gt;PRICE (double): precio del elemento mostrado.&lt;/li&gt;
  &lt;li&gt;QUANTITY (long): cantidad de elementos mostrados.&lt;/li&gt;
  &lt;li&gt;CURRENCY (String): moneda en la que está el precio mostrado.&lt;/li&gt;
  &lt;li&gt;VALUE (double): valor del elemento mostrado.&lt;/li&gt;
  &lt;li&gt;FLIGHT_NUMBER (String): número de vuelo mostrado.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_NIGHTS (long): número de noches para reservaciones de hotel.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_ROOMS (long): número de cuartos en reservaciones de hotel.&lt;/li&gt;
  &lt;li&gt;NUMBER_OF_PASSENGERS (long): número de pasajeros en viajes.&lt;/li&gt;
  &lt;li&gt;ORIGIN (String): procedencia del producto mostrado.&lt;/li&gt;
  &lt;li&gt;DESTINATION (String): Destino del producto mostrado.&lt;/li&gt;
  &lt;li&gt;START_DATE (String): fecha de inicio del producto mostrado en formato YYYY-MM-DD.&lt;/li&gt;
  &lt;li&gt;END_DATE (String): fecha de fin del producto mostrado en formato YYYY-MM-DD.&lt;/li&gt;
  &lt;li&gt;SEARCH_TERM (String): término de búsqueda mostrados.&lt;/li&gt;
  &lt;li&gt;TRAVEL_CLASS (String): clase del vuelo (económico, business, etc).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;viewitemlist&quot;&gt;VIEW_ITEM_LIST&lt;/h3&gt;

&lt;p&gt;Evento que indica que el usuario ha visto una lista de elementos.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ITEM_CATEGORY (String): categoría del producto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;viewsearchresults&quot;&gt;VIEW_SEARCH_RESULTS&lt;/h3&gt;

&lt;p&gt;Evento que indica que el usuario ha obtenido los resultados de su búsqueda.&lt;/p&gt;

&lt;p&gt;Parámetros necesarios:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SEARCH_TERM (String): término de búsqueda.&lt;/li&gt;
&lt;/ul&gt;</content><category term="firebase" /><category term="android" /><category term="analytics" /><summary type="html">Conoce cómo los usuarios interactúan con tu app con Analytics de Firebase.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://warriorminds.github.io/{&quot;feature&quot;=&gt;nil}" /></entry></feed>
